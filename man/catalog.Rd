% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/catalog.R
\name{catalog}
\alias{catalog}
\title{Create catalog of vocal signals}
\usage{
catalog(X, flim = c(0, 22), nrow = 4, ncol = 3, same.time.scale = TRUE, 
collev = seq(-40, 0, 1), ovlp = 50, parallel = 1, mar = 0.05, wl = 512, gr = FALSE, 
pal = reverse.gray.colors.2, it = "jpeg", path = NULL, pb = TRUE, fast = FALSE, 
res = 160, orientation = "v", labels = c("sound.files", "selec"), height = NULL, 
width = NULL, tags = NULL, tag.pal = NULL, legend = TRUE, cex = 1, leg.wd = 1, 
img.suffix = NULL)
}
\arguments{
\item{X}{Data frame with columns for sound file name (sound.files), selection number (selec), 
and start and end time of signal (start and end). Default is \code{NULL}.}

\item{flim}{A numeric vector of length 2 indicating the highest and lowest 
frequency limits (kHz) of the spectrogram, as in 
\code{\link[seewave]{spectro}}. Default is c(0,22).}

\item{nrow}{A numeric vector of length 1. Specifies number of rows. Default is 4.}

\item{ncol}{A numeric vector of length 1.  Specifies number of columns. Default is 3.}

\item{same.time.scale}{Logical. Controls if all spectrograms are in the same time scale 
(i.e. have the same duration).}

\item{collev}{A numeric vector of length 3. Specifies levels to partition the 
amplitude range of the spectrogram (in dB). The more levels the higher the
resolution of the spectrogram. Default is seq(-40, 0, 1). seq(-115, 0, 1) will produces spectrograms
similar to other acoustic analysis software packages.}

\item{ovlp}{Numeric vector of length 1 specifying \% of overlap between two 
consecutive windows, as in \code{\link[seewave]{spectro}}. Default is 50. High values of ovlp 
slow down the function but produce more accurate selection limits (when X is provided).}

\item{parallel}{Numeric. Controls whether parallel computing is applied.
It specifies the number of cores to be used. Default is 1 (i.e. no parallel computing).}

\item{mar}{Numeric vector of length 1. Specifies the margins adjacent to the start and end points of selections,
dealineating spectrogram limits. Default is 0.05.}

\item{wl}{A numeric vector of length 1 specifying the window length of the spectrogram, default 
is 512.}

\item{gr}{Logical argument to add grid to spectrogram. Default is \code{FALSE}.}

\item{pal}{Color palette function for spectrogram. Default is reverse.gray.colors.2. See 
\code{\link[seewave]{spectro}} for more palettes. Palettes as \code{\link[monitoR]{gray.2}} may work better when fast = T.}

\item{it}{A character vector of length 1 giving the image type to be used. Currently only
"tiff" and "jpeg" are admitted. Default is "jpeg".}

\item{path}{Character string containing the directory path where the sound files are located. 
If \code{NULL} (default) then the current working directory is used.}

\item{pb}{Logical argument to control progress bar. Default is \code{TRUE}. Note that progress bar is only used
when parallel = 1.}

\item{fast}{Logical. If \code{TRUE} then image function is used internally to create spectrograms, which substantially 
increases performance (much faster), although some options become unavailable, as collevels, and sc (amplitude scale).
This option is indicated for signals with high background noise levels. Palette colors \code{\link[monitoR]{gray.1}}, \code{\link[monitoR]{gray.2}}, 
\code{\link[monitoR]{gray.3}}, \code{\link[monitoR]{topo.1}} and \code{\link[monitoR]{rainbow.1}} (which are already imported) seem
to work better with 'fast' spectograms. Palette colors  \code{\link[monitoR]{gray.1}}, \code{\link[monitoR]{gray.2}}, 
\code{\link[monitoR]{gray.3}} offer 
decreasing darkness levels. THIS IS STILL BEING TESTED.}

\item{res}{Numeric argument of length 1. Controls image resolution.
Default is 100 (faster) although 300 - 400 is recommended for publication/ 
presentation quality.}

\item{orientation}{String. Indicates whether a letter page size image is produced in vertical ('v' option) or
horizontal orientation ('h' option). Note that width and height can also be specified.}

\item{labels}{String vector. Provides the column names that will be used as labels above the corresponding spectrograms.}

\item{height}{Numeric. Single value (in inches) indicating the height of the output image files. Default is 11 
for vertical orientation.}

\item{width}{Numeric. Single value (in inches) indicating the width of the output image files.  Default is 8.5
for vertical orientation.}

\item{tags}{String vector. Provides the column names that will be used for the color tagging legend above
spectrograms.}

\item{tag.pal}{List of color palette function for tags. Should be of length 1 or 2. If \code{NULL} then a pallete 
emuling the ggplot2 color palette is used for the first tag and the heat.color palette for the second tag (if provided).}

\item{legend}{Logical. Controls if tag legend is plotted at the right side of the catalog. Default is 
\code{TRUE}. Ignored if no tags are provided.}

\item{cex}{A numeric vector of length 1 giving the amount by which text 
(including labels and axis) should be magnified. Default is 1.}

\item{leg.wd}{Numeric. Controls the width of the legend column. Default is 1.}

\item{img.suffix}{A character vector of length 1 with a suffix (label) to add at the end of the names of 
image files. Default is \code{NULL} (no suffix). Can be useful to label catalogs from different individuals, 
species or sites.}
}
\value{
image files with spectrograms of whole sound files in the working directory. Multiple pages
can be returned, depending on the length of each sound file.
}
\description{
\code{catalog} produces spectrograms of selections (signals) split into multiple rows and columns.
}
\details{
This functions aims to simplify the visual exploration of multiple vocalizations. The function plots a
 matrix of spectrograms from a selection table. Spectrograms can be labeled or color tagged to facilitate
  exploring variation related to a parameter of interest (e.g. location, song type).
}
\examples{
\dontrun{
# Set temporary working directory
setwd(tempdir())
# save sound file examples
data(list = c("Phae.long1", "Phae.long2","selec.table"))
writeWave(Phae.long1,"Phae.long1.wav") 
writeWave(Phae.long2,"Phae.long2.wav")
 writeWave(Phae.long3,"Phae.long3.wav")
 writeWave(Phae.long4,"Phae.long4.wav")


catalog(X = selec.table, flim = c(1, 10), nrow = 4, ncol = 2, same.time.scale = T,
 ovlp = 90, parallel = 1, mar = 0.01, wl = 200, gr = FALSE,
 orientation = "v",  labels = c("sound.files", "selec"), legend = T)
 
 #different time scales and tag palette
catalog(X = selec.table, flim = c(1, 10), nrow = 4, ncol = 2, same.time.scale = F,
 ovlp = 90, parallel = 1, mar = 0.01, wl = 200, gr = FALSE, 
 orientation = "v",  labels = c("sound.files", "selec"), legend = T, 
 tag.pal = terrain.colors)
 #'  
 #adding tags and changing spectro palette
catalog(X = selec.table, flim = c(1, 10), nrow = 4, ncol = 2, same.time.scale = F,
 ovlp = 90, parallel = 1, mar = 0.01, wl = 200, gr = FALSE, pal = reverse.heat.colors,
 orientation = "v",  labels = c("sound.files", "selec"), legend = T, 
 tag.pal = terrain.colors, tags = "sound.files")

 #create a bigger selection table
 X <- rbind(selec.table, selec.table, selec.table, selec.table)
 X <- rbind(X, X)
 
 #create some simulated labels
 X$songtype <- sample(letters[1:3], nrow(X), replace = T)
 X$indiv <- sample(letters[1:12], nrow(X), replace = T)

# 12 columns in 5 rows, 2 tags
catalog(X = selec.table, flim = c(1, 10), nrow = 5, ncol = 12, same.time.scale = F,
 ovlp = 90, parallel = 1, mar = 0.01, wl = 200, gr = FALSE, 
 orientation = "v",  labels = c("sound.files", "selec"), legend = F, 
 collev = seq(-65, 0, 5), tag.pal = terrain.colors, tags = c("songtype", "indiv"))


# with legend
catalog(X = selec.table, flim = c(1, 10), nrow = 5, ncol = 12, same.time.scale = F,
 ovlp = 90, parallel = 1, mar = 0.01, wl = 200, gr = FALSE,
 orientation = "v",  labels = c("sound.files", "selec"), legend = T, 
 width = 20, collev = seq(-65, 0, 5), tag.pal = terrain.colors,
  tags = c("songtype", "indiv"))
  
  #' horizontal orientation
catalog(X = selec.table, flim = c(1, 10), nrow = 5, ncol = 12, same.time.scale = F,
 ovlp = 90, parallel = 1, mar = 0.01, wl = 200, gr = FALSE,
 orientation = "h",  labels = c("sound.files", "selec"), legend = T, 
 width = 20, collev = seq(-65, 0, 5), tag.pal = terrain.colors,
  tags = c("songtype", "indiv"))
check this floder
getwd()
}
}
\author{
Marcelo Araya-Salas (\email{araya-salas@cornell.edu})
}

